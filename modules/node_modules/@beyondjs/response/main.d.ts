/************
Processor: ts
************/

// error-manager.ts
declare namespace ns_0 {
  export class ErrorManager {
    #private;
    get code(): number;
    get text(): string;
    constructor(code: number, text: string, exc?: Error);
    toJSON(): {
      text: string;
      code: number;
    };
  }
}


// response.ts
declare namespace ns_1 {
  import ErrorManager = ns_0.ErrorManager;
  export class Response<DataType> {
    #private;
    get error(): ErrorManager;
    get data(): DataType;
    get status(): boolean;
    constructor(params: {
      error?: ErrorManager;
      data?: DataType;
    });
    toJSON(): {
      status: boolean;
      error: ErrorManager | {
        text: string;
        code: number;
      };
      data: DataType;
    };
  }
}


export import ErrorManager = ns_0.ErrorManager;
export import Response = ns_1.Response;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };